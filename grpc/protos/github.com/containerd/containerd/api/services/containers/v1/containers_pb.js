// source: github.com/containerd/containerd/api/services/containers/v1/containers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.containerd.services.containers.v1.Container', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.Container.Runtime', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.CreateContainerRequest', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.CreateContainerResponse', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.DeleteContainerRequest', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.GetContainerRequest', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.GetContainerResponse', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.ListContainerMessage', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.ListContainersRequest', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.ListContainersResponse', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.UpdateContainerRequest', null, global);
goog.exportSymbol('proto.containerd.services.containers.v1.UpdateContainerResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.Container = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.Container, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.Container.displayName = 'proto.containerd.services.containers.v1.Container';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.Container.Runtime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.Container.Runtime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.Container.Runtime.displayName = 'proto.containerd.services.containers.v1.Container.Runtime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.GetContainerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.GetContainerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.GetContainerRequest.displayName = 'proto.containerd.services.containers.v1.GetContainerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.GetContainerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.GetContainerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.GetContainerResponse.displayName = 'proto.containerd.services.containers.v1.GetContainerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.ListContainersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containerd.services.containers.v1.ListContainersRequest.repeatedFields_, null);
};
goog.inherits(proto.containerd.services.containers.v1.ListContainersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.ListContainersRequest.displayName = 'proto.containerd.services.containers.v1.ListContainersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.ListContainersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.containerd.services.containers.v1.ListContainersResponse.repeatedFields_, null);
};
goog.inherits(proto.containerd.services.containers.v1.ListContainersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.ListContainersResponse.displayName = 'proto.containerd.services.containers.v1.ListContainersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.CreateContainerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.CreateContainerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.CreateContainerRequest.displayName = 'proto.containerd.services.containers.v1.CreateContainerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.CreateContainerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.CreateContainerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.CreateContainerResponse.displayName = 'proto.containerd.services.containers.v1.CreateContainerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.UpdateContainerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.UpdateContainerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.UpdateContainerRequest.displayName = 'proto.containerd.services.containers.v1.UpdateContainerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.UpdateContainerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.UpdateContainerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.UpdateContainerResponse.displayName = 'proto.containerd.services.containers.v1.UpdateContainerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.DeleteContainerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.DeleteContainerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.DeleteContainerRequest.displayName = 'proto.containerd.services.containers.v1.DeleteContainerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.containerd.services.containers.v1.ListContainerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.containerd.services.containers.v1.ListContainerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.containerd.services.containers.v1.ListContainerMessage.displayName = 'proto.containerd.services.containers.v1.ListContainerMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.Container.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.Container.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.Container} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.Container.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    image: jspb.Message.getFieldWithDefault(msg, 3, ""),
    runtime: (f = msg.getRuntime()) && proto.containerd.services.containers.v1.Container.Runtime.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    snapshotter: jspb.Message.getFieldWithDefault(msg, 6, ""),
    snapshotKey: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    extensionsMap: (f = msg.getExtensionsMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.Container.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.Container;
  return proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.Container} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 4:
      var value = new proto.containerd.services.containers.v1.Container.Runtime;
      reader.readMessage(value,proto.containerd.services.containers.v1.Container.Runtime.deserializeBinaryFromReader);
      msg.setRuntime(value);
      break;
    case 5:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshotter(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshotKey(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 10:
      var value = msg.getExtensionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.Container.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.Container.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.Container} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.Container.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRuntime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.containerd.services.containers.v1.Container.Runtime.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getSnapshotter();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSnapshotKey();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExtensionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.Container.Runtime.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.Container.Runtime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.Container.Runtime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.Container.Runtime.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.Container.Runtime}
 */
proto.containerd.services.containers.v1.Container.Runtime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.Container.Runtime;
  return proto.containerd.services.containers.v1.Container.Runtime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.Container.Runtime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.Container.Runtime}
 */
proto.containerd.services.containers.v1.Container.Runtime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.Container.Runtime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.Container.Runtime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.Container.Runtime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.Container.Runtime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.containerd.services.containers.v1.Container.Runtime.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.containerd.services.containers.v1.Container.Runtime} returns this
 */
proto.containerd.services.containers.v1.Container.Runtime.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any options = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.containerd.services.containers.v1.Container.Runtime.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.containerd.services.containers.v1.Container.Runtime} returns this
*/
proto.containerd.services.containers.v1.Container.Runtime.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.Container.Runtime} returns this
 */
proto.containerd.services.containers.v1.Container.Runtime.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.Container.Runtime.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.containerd.services.containers.v1.Container.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.containerd.services.containers.v1.Container.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional string image = 3;
 * @return {string}
 */
proto.containerd.services.containers.v1.Container.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Runtime runtime = 4;
 * @return {?proto.containerd.services.containers.v1.Container.Runtime}
 */
proto.containerd.services.containers.v1.Container.prototype.getRuntime = function() {
  return /** @type{?proto.containerd.services.containers.v1.Container.Runtime} */ (
    jspb.Message.getWrapperField(this, proto.containerd.services.containers.v1.Container.Runtime, 4));
};


/**
 * @param {?proto.containerd.services.containers.v1.Container.Runtime|undefined} value
 * @return {!proto.containerd.services.containers.v1.Container} returns this
*/
proto.containerd.services.containers.v1.Container.prototype.setRuntime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.clearRuntime = function() {
  return this.setRuntime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.Container.prototype.hasRuntime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Any spec = 5;
 * @return {?proto.google.protobuf.Any}
 */
proto.containerd.services.containers.v1.Container.prototype.getSpec = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 5));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.containerd.services.containers.v1.Container} returns this
*/
proto.containerd.services.containers.v1.Container.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.Container.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string snapshotter = 6;
 * @return {string}
 */
proto.containerd.services.containers.v1.Container.prototype.getSnapshotter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.setSnapshotter = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string snapshot_key = 7;
 * @return {string}
 */
proto.containerd.services.containers.v1.Container.prototype.getSnapshotKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.setSnapshotKey = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.containerd.services.containers.v1.Container.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.containerd.services.containers.v1.Container} returns this
*/
proto.containerd.services.containers.v1.Container.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.Container.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.containerd.services.containers.v1.Container.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.containerd.services.containers.v1.Container} returns this
*/
proto.containerd.services.containers.v1.Container.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.Container.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * map<string, google.protobuf.Any> extensions = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.containerd.services.containers.v1.Container.prototype.getExtensionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.containerd.services.containers.v1.Container} returns this
 */
proto.containerd.services.containers.v1.Container.prototype.clearExtensionsMap = function() {
  this.getExtensionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.GetContainerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.GetContainerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.GetContainerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.GetContainerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.GetContainerRequest}
 */
proto.containerd.services.containers.v1.GetContainerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.GetContainerRequest;
  return proto.containerd.services.containers.v1.GetContainerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.GetContainerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.GetContainerRequest}
 */
proto.containerd.services.containers.v1.GetContainerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.GetContainerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.GetContainerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.GetContainerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.GetContainerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.containerd.services.containers.v1.GetContainerRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.containerd.services.containers.v1.GetContainerRequest} returns this
 */
proto.containerd.services.containers.v1.GetContainerRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.GetContainerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.GetContainerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.GetContainerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.GetContainerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && proto.containerd.services.containers.v1.Container.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.GetContainerResponse}
 */
proto.containerd.services.containers.v1.GetContainerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.GetContainerResponse;
  return proto.containerd.services.containers.v1.GetContainerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.GetContainerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.GetContainerResponse}
 */
proto.containerd.services.containers.v1.GetContainerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containerd.services.containers.v1.Container;
      reader.readMessage(value,proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.GetContainerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.GetContainerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.GetContainerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.GetContainerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.containerd.services.containers.v1.Container.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.GetContainerResponse.prototype.getContainer = function() {
  return /** @type{?proto.containerd.services.containers.v1.Container} */ (
    jspb.Message.getWrapperField(this, proto.containerd.services.containers.v1.Container, 1));
};


/**
 * @param {?proto.containerd.services.containers.v1.Container|undefined} value
 * @return {!proto.containerd.services.containers.v1.GetContainerResponse} returns this
*/
proto.containerd.services.containers.v1.GetContainerResponse.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.GetContainerResponse} returns this
 */
proto.containerd.services.containers.v1.GetContainerResponse.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.GetContainerResponse.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containerd.services.containers.v1.ListContainersRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.ListContainersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.ListContainersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.ListContainersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.ListContainersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filtersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.ListContainersRequest}
 */
proto.containerd.services.containers.v1.ListContainersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.ListContainersRequest;
  return proto.containerd.services.containers.v1.ListContainersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.ListContainersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.ListContainersRequest}
 */
proto.containerd.services.containers.v1.ListContainersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.ListContainersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.ListContainersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.ListContainersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.ListContainersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string filters = 1;
 * @return {!Array<string>}
 */
proto.containerd.services.containers.v1.ListContainersRequest.prototype.getFiltersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.containerd.services.containers.v1.ListContainersRequest} returns this
 */
proto.containerd.services.containers.v1.ListContainersRequest.prototype.setFiltersList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.containerd.services.containers.v1.ListContainersRequest} returns this
 */
proto.containerd.services.containers.v1.ListContainersRequest.prototype.addFilters = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containerd.services.containers.v1.ListContainersRequest} returns this
 */
proto.containerd.services.containers.v1.ListContainersRequest.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.containerd.services.containers.v1.ListContainersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.ListContainersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.ListContainersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.ListContainersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.ListContainersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    containersList: jspb.Message.toObjectList(msg.getContainersList(),
    proto.containerd.services.containers.v1.Container.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.ListContainersResponse}
 */
proto.containerd.services.containers.v1.ListContainersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.ListContainersResponse;
  return proto.containerd.services.containers.v1.ListContainersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.ListContainersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.ListContainersResponse}
 */
proto.containerd.services.containers.v1.ListContainersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containerd.services.containers.v1.Container;
      reader.readMessage(value,proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader);
      msg.addContainers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.ListContainersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.ListContainersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.ListContainersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.ListContainersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.containerd.services.containers.v1.Container.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Container containers = 1;
 * @return {!Array<!proto.containerd.services.containers.v1.Container>}
 */
proto.containerd.services.containers.v1.ListContainersResponse.prototype.getContainersList = function() {
  return /** @type{!Array<!proto.containerd.services.containers.v1.Container>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.containerd.services.containers.v1.Container, 1));
};


/**
 * @param {!Array<!proto.containerd.services.containers.v1.Container>} value
 * @return {!proto.containerd.services.containers.v1.ListContainersResponse} returns this
*/
proto.containerd.services.containers.v1.ListContainersResponse.prototype.setContainersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.containerd.services.containers.v1.Container=} opt_value
 * @param {number=} opt_index
 * @return {!proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.ListContainersResponse.prototype.addContainers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.containerd.services.containers.v1.Container, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.containerd.services.containers.v1.ListContainersResponse} returns this
 */
proto.containerd.services.containers.v1.ListContainersResponse.prototype.clearContainersList = function() {
  return this.setContainersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.CreateContainerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.CreateContainerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.CreateContainerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.CreateContainerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && proto.containerd.services.containers.v1.Container.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.CreateContainerRequest}
 */
proto.containerd.services.containers.v1.CreateContainerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.CreateContainerRequest;
  return proto.containerd.services.containers.v1.CreateContainerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.CreateContainerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.CreateContainerRequest}
 */
proto.containerd.services.containers.v1.CreateContainerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containerd.services.containers.v1.Container;
      reader.readMessage(value,proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.CreateContainerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.CreateContainerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.CreateContainerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.CreateContainerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.containerd.services.containers.v1.Container.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.CreateContainerRequest.prototype.getContainer = function() {
  return /** @type{?proto.containerd.services.containers.v1.Container} */ (
    jspb.Message.getWrapperField(this, proto.containerd.services.containers.v1.Container, 1));
};


/**
 * @param {?proto.containerd.services.containers.v1.Container|undefined} value
 * @return {!proto.containerd.services.containers.v1.CreateContainerRequest} returns this
*/
proto.containerd.services.containers.v1.CreateContainerRequest.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.CreateContainerRequest} returns this
 */
proto.containerd.services.containers.v1.CreateContainerRequest.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.CreateContainerRequest.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.CreateContainerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.CreateContainerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.CreateContainerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.CreateContainerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && proto.containerd.services.containers.v1.Container.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.CreateContainerResponse}
 */
proto.containerd.services.containers.v1.CreateContainerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.CreateContainerResponse;
  return proto.containerd.services.containers.v1.CreateContainerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.CreateContainerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.CreateContainerResponse}
 */
proto.containerd.services.containers.v1.CreateContainerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containerd.services.containers.v1.Container;
      reader.readMessage(value,proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.CreateContainerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.CreateContainerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.CreateContainerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.CreateContainerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.containerd.services.containers.v1.Container.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.CreateContainerResponse.prototype.getContainer = function() {
  return /** @type{?proto.containerd.services.containers.v1.Container} */ (
    jspb.Message.getWrapperField(this, proto.containerd.services.containers.v1.Container, 1));
};


/**
 * @param {?proto.containerd.services.containers.v1.Container|undefined} value
 * @return {!proto.containerd.services.containers.v1.CreateContainerResponse} returns this
*/
proto.containerd.services.containers.v1.CreateContainerResponse.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.CreateContainerResponse} returns this
 */
proto.containerd.services.containers.v1.CreateContainerResponse.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.CreateContainerResponse.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.UpdateContainerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.UpdateContainerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && proto.containerd.services.containers.v1.Container.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.UpdateContainerRequest}
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.UpdateContainerRequest;
  return proto.containerd.services.containers.v1.UpdateContainerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.UpdateContainerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.UpdateContainerRequest}
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containerd.services.containers.v1.Container;
      reader.readMessage(value,proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.UpdateContainerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.UpdateContainerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.containerd.services.containers.v1.Container.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.getContainer = function() {
  return /** @type{?proto.containerd.services.containers.v1.Container} */ (
    jspb.Message.getWrapperField(this, proto.containerd.services.containers.v1.Container, 1));
};


/**
 * @param {?proto.containerd.services.containers.v1.Container|undefined} value
 * @return {!proto.containerd.services.containers.v1.UpdateContainerRequest} returns this
*/
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.UpdateContainerRequest} returns this
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.containerd.services.containers.v1.UpdateContainerRequest} returns this
*/
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.UpdateContainerRequest} returns this
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.UpdateContainerRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.UpdateContainerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.UpdateContainerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && proto.containerd.services.containers.v1.Container.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.UpdateContainerResponse}
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.UpdateContainerResponse;
  return proto.containerd.services.containers.v1.UpdateContainerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.UpdateContainerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.UpdateContainerResponse}
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containerd.services.containers.v1.Container;
      reader.readMessage(value,proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.UpdateContainerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.UpdateContainerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.containerd.services.containers.v1.Container.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.prototype.getContainer = function() {
  return /** @type{?proto.containerd.services.containers.v1.Container} */ (
    jspb.Message.getWrapperField(this, proto.containerd.services.containers.v1.Container, 1));
};


/**
 * @param {?proto.containerd.services.containers.v1.Container|undefined} value
 * @return {!proto.containerd.services.containers.v1.UpdateContainerResponse} returns this
*/
proto.containerd.services.containers.v1.UpdateContainerResponse.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.UpdateContainerResponse} returns this
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.UpdateContainerResponse.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.DeleteContainerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.DeleteContainerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.DeleteContainerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.DeleteContainerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.DeleteContainerRequest}
 */
proto.containerd.services.containers.v1.DeleteContainerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.DeleteContainerRequest;
  return proto.containerd.services.containers.v1.DeleteContainerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.DeleteContainerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.DeleteContainerRequest}
 */
proto.containerd.services.containers.v1.DeleteContainerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.DeleteContainerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.DeleteContainerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.DeleteContainerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.DeleteContainerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.containerd.services.containers.v1.DeleteContainerRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.containerd.services.containers.v1.DeleteContainerRequest} returns this
 */
proto.containerd.services.containers.v1.DeleteContainerRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.containerd.services.containers.v1.ListContainerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.containerd.services.containers.v1.ListContainerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.containerd.services.containers.v1.ListContainerMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.ListContainerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && proto.containerd.services.containers.v1.Container.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.containerd.services.containers.v1.ListContainerMessage}
 */
proto.containerd.services.containers.v1.ListContainerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.containerd.services.containers.v1.ListContainerMessage;
  return proto.containerd.services.containers.v1.ListContainerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.containerd.services.containers.v1.ListContainerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.containerd.services.containers.v1.ListContainerMessage}
 */
proto.containerd.services.containers.v1.ListContainerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.containerd.services.containers.v1.Container;
      reader.readMessage(value,proto.containerd.services.containers.v1.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.containerd.services.containers.v1.ListContainerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.containerd.services.containers.v1.ListContainerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.containerd.services.containers.v1.ListContainerMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.containerd.services.containers.v1.ListContainerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.containerd.services.containers.v1.Container.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.containerd.services.containers.v1.Container}
 */
proto.containerd.services.containers.v1.ListContainerMessage.prototype.getContainer = function() {
  return /** @type{?proto.containerd.services.containers.v1.Container} */ (
    jspb.Message.getWrapperField(this, proto.containerd.services.containers.v1.Container, 1));
};


/**
 * @param {?proto.containerd.services.containers.v1.Container|undefined} value
 * @return {!proto.containerd.services.containers.v1.ListContainerMessage} returns this
*/
proto.containerd.services.containers.v1.ListContainerMessage.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.containerd.services.containers.v1.ListContainerMessage} returns this
 */
proto.containerd.services.containers.v1.ListContainerMessage.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.containerd.services.containers.v1.ListContainerMessage.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.containerd.services.containers.v1);
